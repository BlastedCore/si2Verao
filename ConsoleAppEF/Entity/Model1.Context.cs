//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SI2_Fase2Entities : DbContext
    {
        public SI2_Fase2Entities()
            : base("name=SI2_Fase2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aluno> Alunoes { get; set; }
        public virtual DbSet<Curso> Cursoes { get; set; }
        public virtual DbSet<Curso_Dep> Curso_Dep { get; set; }
        public virtual DbSet<Departamento> Departamentoes { get; set; }
        public virtual DbSet<Escola> Escolas { get; set; }
        public virtual DbSet<Inscricao> Inscricaos { get; set; }
        public virtual DbSet<Matricula> Matriculas { get; set; }
        public virtual DbSet<NotaFinal> NotaFinals { get; set; }
        public virtual DbSet<Nota> Notas { get; set; }
        public virtual DbSet<Oferta> Ofertas { get; set; }
        public virtual DbSet<Pessoa> Pessoas { get; set; }
        public virtual DbSet<Professor> Professors { get; set; }
        public virtual DbSet<Registo_Prof_Ano> Registo_Prof_Ano { get; set; }
        public virtual DbSet<Registo_Regente_Ano> Registo_Regente_Ano { get; set; }
        public virtual DbSet<Seccao> Seccaos { get; set; }
        public virtual DbSet<UC> UCs { get; set; }
    
        public virtual ObjectResult<sp_Catch_errors_Result> sp_Catch_errors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Catch_errors_Result>("sp_Catch_errors");
        }
    
        public virtual int sp_createCurso(string dep_sigla, string cur_sigla, string descricao)
        {
            try
            {
                var dep_siglaParameter = dep_sigla != null ?
                    new ObjectParameter("dep_sigla", dep_sigla) :
                    new ObjectParameter("dep_sigla", typeof(string));

                var cur_siglaParameter = cur_sigla != null ?
                    new ObjectParameter("cur_sigla", cur_sigla) :
                    new ObjectParameter("cur_sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_createCurso", dep_siglaParameter, cur_siglaParameter, descricaoParameter);
            }
            catch (Exception e)
            {
                return 0;
            }
        }
    
        public virtual ObjectResult<sp_deleteDepartamento_Result> sp_deleteDepartamento(string sigla)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteDepartamento_Result>("sp_deleteDepartamento", siglaParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_deleteOferta_Result> sp_deleteOferta(string curso, string uc)
        {
            try
            {
                var cursoParameter = curso != null ?
                    new ObjectParameter("curso", curso) :
                    new ObjectParameter("curso", typeof(string));

                var ucParameter = uc != null ?
                    new ObjectParameter("uc", uc) :
                    new ObjectParameter("uc", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteOferta_Result>("sp_deleteOferta", cursoParameter, ucParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_deleteSeccao_Result> sp_deleteSeccao(string sigla)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteSeccao_Result>("sp_deleteSeccao", siglaParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_deleteUC_Result> sp_deleteUC(string sigla)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deleteUC_Result>("sp_deleteUC", siglaParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_GetParams_Result> sp_GetParams(string sp)
        {
            try
            {
                var spParameter = sp != null ?
                    new ObjectParameter("sp", sp) :
                    new ObjectParameter("sp", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetParams_Result>("sp_GetParams", spParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_GetSpecifics_Result> sp_GetSpecifics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSpecifics_Result>("sp_GetSpecifics");
        }
    
        public virtual ObjectResult<sp_insertDepartamento_Result> sp_insertDepartamento(string sigla, string descricao)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertDepartamento_Result>("sp_insertDepartamento", siglaParameter, descricaoParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertInscricao_Result> sp_insertInscricao(string aluno, string uc, string ano)
        {
            try
            {
                Nullable<int> al = Convert.ToInt32(aluno);
                var alunoParameter = al.HasValue ?
                    new ObjectParameter("aluno", al) :
                    new ObjectParameter("aluno", typeof(int));

                var ucParameter = uc != null ?
                    new ObjectParameter("uc", uc) :
                    new ObjectParameter("uc", typeof(string));

                Nullable<int> an = Convert.ToInt32(ano);
                var anoParameter = an.HasValue ?
                    new ObjectParameter("ano", an) :
                    new ObjectParameter("ano", typeof(int));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertInscricao_Result>("sp_insertInscricao", alunoParameter, ucParameter, anoParameter);
            }
            catch (Exception)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertMatricula_Result> sp_insertMatricula( string aluno, string curso, string ano)
        {
            try
            {
                Nullable<int> al = Convert.ToInt32(aluno); 
                var alunoParameter = al.HasValue ?
                    new ObjectParameter("aluno", al) :
                    new ObjectParameter("aluno", typeof(int));

                var cursoParameter = curso != null ?
                    new ObjectParameter("curso", curso) :
                    new ObjectParameter("curso", typeof(string));

                Nullable<int> an = Convert.ToInt32(ano);
                var anoParameter = an.HasValue ?
                    new ObjectParameter("ano", an) :
                    new ObjectParameter("ano", typeof(int));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertMatricula_Result>("sp_insertMatricula", alunoParameter, cursoParameter, anoParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertNota_Result> sp_insertNota(string aluno, string ano, string nota, string uc)
        {
            try
            {
                Nullable<int> al = Convert.ToInt32(aluno);
                var alunoParameter = al.HasValue ?
                    new ObjectParameter("aluno", al) :
                    new ObjectParameter("aluno", typeof(int));

                Nullable<int> an = Convert.ToInt32(ano);
                var anoParameter = an.HasValue ?
                    new ObjectParameter("ano", an) :
                    new ObjectParameter("ano", typeof(int));

                Nullable<Double> no = Convert.ToDouble(nota);
                var notaParameter = no.HasValue ?
                    new ObjectParameter("nota", no) :
                    new ObjectParameter("nota", typeof(double));

                var ucParameter = uc != null ?
                    new ObjectParameter("uc", uc) :
                    new ObjectParameter("uc", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertNota_Result>("sp_insertNota", alunoParameter, anoParameter, notaParameter, ucParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertOferta_Result> sp_insertOferta(string curso, string uc, string semestre)
        {
            try
            {
                var cursoParameter = curso != null ?
                    new ObjectParameter("curso", curso) :
                    new ObjectParameter("curso", typeof(string));

                var ucParameter = uc != null ?
                    new ObjectParameter("uc", uc) :
                    new ObjectParameter("uc", typeof(string));

                Nullable<int> sem = Convert.ToInt32(semestre);
                var semestreParameter = sem.HasValue ?
                    new ObjectParameter("semestre", sem) :
                    new ObjectParameter("semestre", typeof(int));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertOferta_Result>("sp_insertOferta", cursoParameter, ucParameter, semestreParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertSeccao_Result> sp_insertSeccao(string sigla, string departamento, string descricao)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var departamentoParameter = departamento != null ?
                    new ObjectParameter("departamento", departamento) :
                    new ObjectParameter("departamento", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertSeccao_Result>("sp_insertSeccao", siglaParameter, departamentoParameter, descricaoParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_insertUC_Result> sp_insertUC(string sigla, string descricao, string creditosstring)
        {
            try
            {
                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));
                Nullable<double> creditos;
                try
                {
                    creditos = Convert.ToDouble(creditosstring);
                }
                catch (Exception)
                {
                    creditos = null;
                }
                var creditosParameter = creditos.HasValue ?
                    new ObjectParameter("creditos", creditos) :
                    new ObjectParameter("creditos", typeof(double));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_insertUC_Result>("sp_insertUC", siglaParameter, descricaoParameter, creditosParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_updateDepartamento_Result> sp_updateDepartamento(string id, string sigla, string descricao)
        {
            try
            {
                Nullable<int> i = Convert.ToInt32(id);
                var idParameter = i.HasValue ?
                    new ObjectParameter("id", i) :
                    new ObjectParameter("id", typeof(int));

                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateDepartamento_Result>("sp_updateDepartamento", idParameter, siglaParameter, descricaoParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_updateSeccao_Result> sp_updateSeccao(string id, string sigla, string descricao, string departamento)
        {
            try
            {
                Nullable<int> i = Convert.ToInt32(id);
                var idParameter = i.HasValue ?
                    new ObjectParameter("id", i) :
                    new ObjectParameter("id", typeof(int));

                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                var departamentoParameter = departamento != null ?
                    new ObjectParameter("departamento", departamento) :
                    new ObjectParameter("departamento", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateSeccao_Result>("sp_updateSeccao", idParameter, siglaParameter, descricaoParameter, departamentoParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    
        public virtual ObjectResult<sp_updateUC_Result> sp_updateUC(string id, string sigla, string descricao, string creditos)
        {
            try
            {
                Nullable<int> i = Convert.ToInt32(id);
                var idParameter = i.HasValue ?
                    new ObjectParameter("id", i) :
                    new ObjectParameter("id", typeof(int));

                var siglaParameter = sigla != null ?
                    new ObjectParameter("sigla", sigla) :
                    new ObjectParameter("sigla", typeof(string));

                var descricaoParameter = descricao != null ?
                    new ObjectParameter("descricao", descricao) :
                    new ObjectParameter("descricao", typeof(string));

                var creditosParameter = creditos != null ?
                    new ObjectParameter("creditos", creditos) :
                    new ObjectParameter("creditos", typeof(string));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_updateUC_Result>("sp_updateUC", idParameter, siglaParameter, descricaoParameter, creditosParameter);
            }
            catch (Exception e)
            {
                return null;
            }
        }
    }
}
